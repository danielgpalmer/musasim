/* machine.h */

#include <stdint.h>


volatile uint16_t* dma_register_config = (uint16_t*) 0xa00000;
volatile uint16_t* dma_register_data = (uint16_t*) 0xa00002;
volatile uint16_t* dma_register_counth = (uint16_t*) 0xa00004;
volatile uint16_t* dma_register_countl = (uint16_t*) 0xa00006;
volatile uint16_t* dma_register_srch = (uint16_t*) 0xa00008;
volatile uint16_t* dma_register_srcl = (uint16_t*) 0xa0000a;
volatile uint16_t* dma_register_desth = (uint16_t*) 0xa0000c;
volatile uint16_t* dma_register_destl = (uint16_t*) 0xa0000e;

/*
 * dmaregisters.h
 *
 *  Created on: Dec 23, 2011
 *      Author: daniel
 */

#ifndef DMAREGISTERS_H_
#define DMAREGISTERS_H_

#define DMA_REGISTER_CONFIG_DATAACT_SHIFT 2
#define DMA_REGISTER_CONFIG_SRCACT_SHIFT 5
#define DMA_REGISTER_CONFIG_DSTACT_SHIFT 8

#define DMA_REGISTER_CONFIG_SIZE 0x0001 // 0 = 8bits, 1 = 16bits
#define DMA_REGISTER_CONFIG_MODE 0x0002 // 0 = SRC -> DEST, 1 = DATA -> DEST
#define DMA_REGISTER_CONFIG_ACT 0b111
#define DMA_REGISTER_CONFIG_DACT (DMA_REGISTER_CONFIG_ACT << DMA_REGISTER_CONFIG_DATAACT_SHIFT) //
#define DMA_REGISTER_CONFIG_SRCACT (DMA_REGISTER_CONFIG_ACT << DMA_REGISTER_CONFIG_SRCACT_SHIFT) //
#define DMA_REGISTER_CONFIG_DSTACT (DMA_REGISTER_CONFIG_ACT << DMA_REGISTER_CONFIG_DSTACT_SHIFT) //
#define DMA_REGISTER_CONFIG_DONE 0x8000 // 1 when dma transfer finishes
#define DMA_REGISTER_CONFIG_START 0x4000 // write 1 to start dma transfer
// Actions that will be applied to the latch data,source or destination registers after a single read + write
#define DMA_ACT_NOTHING 0b000
#define DMA_ACT_INC 0b001
#define DMA_ACT_INCTWO 0b010
#define DMA_ACT_DEC 0b011
#define DMA_ACT_DECTWO 0b100
#define DMA_ACT_ROTLEFT 0b101 	//
#define DMA_ACT_ROTRIGHT 0b110 	// Only for data?
#define DMA_ACT_INVERSE 0b111 	//
// Bit masks for the data actions
#define DMA_REGISTER_CONFIG_DATAACT_NOTHING (DMA_ACT_NOTHING << DMA_REGISTER_CONFIG_DATAACT_SHIFT)
#define DMA_REGISTER_CONFIG_DATAACT_INC (DMA_ACT_INC << DMA_REGISTER_CONFIG_DATAACT_SHIFT)
#define DMA_REGISTER_CONFIG_DATAACT_INCTWO (DMA_ACT_INCTWO << DMA_REGISTER_CONFIG_DATAACT_SHIFT)
#define DMA_REGISTER_CONFIG_DATAACT_DEC (DMA_ACT_DEC << DMA_REGISTER_CONFIG_DATAACT_SHIFT)
#define DMA_REGISTER_CONFIG_DATAACT_DECTWO (DMA_ACT_DECTWO << DMA_REGISTER_CONFIG_DATAACT_SHIFT)
#define DMA_REGISTER_CONFIG_DATAACT_ROTLEFT (DMA_ACT_ROTLEFT << DMA_REGISTER_CONFIG_DATAACT_SHIFT)
#define DMA_REGISTER_CONFIG_DATAACT_ROTRIGHT (DMA_ACT_ROTRIGHT << DMA_REGISTER_CONFIG_DATAACT_SHIFT)
#define DMA_REGISTER_CONFIG_DATAACT_INVERSE (DMA_ACT_INVERSE << DMA_REGISTER_CONFIG_DATAACT_SHIFT)

// Bit masks for the src actions
#define DMA_REGISTER_CONFIG_SRCACT_NOTHING (DMA_ACT_NOTHING << DMA_REGISTER_CONFIG_SRCACT_SHIFT)
#define DMA_REGISTER_CONFIG_SRCACT_INC (DMA_ACT_INC << DMA_REGISTER_CONFIG_SRCACT_SHIFT)
#define DMA_REGISTER_CONFIG_SRCACT_INCTWO (DMA_ACT_INCTWO <<DMA_REGISTER_CONFIG_SRCACT_SHIFT)
#define DMA_REGISTER_CONFIG_SRCACT_DEC (DMA_ACT_DEC << DMA_REGISTER_CONFIG_SRCACT_SHIFT)
#define DMA_REGISTER_CONFIG_SRCACT_TWO (DMA_ACT_DECTWO << DMA_REGISTER_CONFIG_SRCACT_SHIFT)

// Bit masks for the dest actions
#define DMA_REGISTER_CONFIG_DSTACT_NOTHING (DMA_ACT_NOTHING << DMA_REGISTER_CONFIG_DSTACT_SHIFT)
#define DMA_REGISTER_CONFIG_DSTACT_INC (DMA_ACT_INC << DMA_REGISTER_CONFIG_DSTACT_SHIFT)
#define DMA_REGISTER_CONFIG_DSTACT_INCTWO (DMA_ACT_INCTWO << DMA_REGISTER_CONFIG_DSTACT_SHIFT)
#define DMA_REGISTER_CONFIG_DSTACT_DEC (DMA_ACT_DEC << DMA_REGISTER_CONFIG_DSTACT_SHIFT)
#define DMA_REGISTER_CONFIG_DSTACT_TWO (DMA_ACT_DECTWO << DMA_REGISTER_CONFIG_DSTACT_SHIFT)
#endif /* DMAREGISTERS_H_ */
